Sakila Database
Write a SQL statement for each of the following. 

1. Get 10 cities in descending alphabetical order.

USE sakila;
SELECT * 
FROM city
ORDER BY city DESC
LIMIT 10;

2. Get all films with "airplane" in the title.

SELECT * 
FROM film AS f
WHERE f.title like '%airplane%';

3. Get the highest payment amount.

SELECT max(payment.amount) As highest_amount FROM payment; 

4. Get the number of records in the customer table for store id #1.

SELECT count(store_id) As TotalRecords
FROM customer
WHERE store_id=1;

5. Get all payment records for customer with email address "NANCY.THOMAS@sakilacustomer.org"

SELECT *
FROM customer As c
LEFT join payment As p
ON c.customer_id=p.customer_id
WHERE c.email = 'NANCY.THOMAS@sakilacustomer.org';

6. Use a View to get the film info for actor Bob Fawcett.

SELECT * 
FROM actor_info AS a
WHERE a.first_name='Bob' and a.last_name='Fawcett';

7. Use a Stored Procedure to get the 4 inventory ids for the film "Alien Center" at Store #2. 

SET @findid =(
SELECT f.film_id
FROM film as f
WHERE f.title='Alien Center');

CALL film_in_stock(@findid,2,@filmCount);

SELECT @filmCount;

8. Insert a new store. Ensure that you use TRANSACTION. (This one is possible but it's tough! Pay attention to constraints and the order that you are inserting data.) 

START TRANSACTION;

INSERT INTO staff (first_name, last_name, address_id, email, store_id, `active`, username) 
VALUES ("John", "Doe", "18", "rando@gmail.com", "2", "1", "newJohn");

SET @staffId = LAST_INSERT_ID();

INSERT INTO address (address, district, city_id, phone, location) 
VALUES ('wenlong', 'Dime Box', 300, 7137778888, ST_GeomFromText('POINT(1 1)'));

SET @addressId = LAST_INSERT_ID();

INSERT INTO store (manager_staff_id, address_id) 
VALUES (@staffId, @addressId);

SET @storeId = LAST_INSERT_ID();

UPDATE staff 
SET store_id = @storeId
WHERE staff_id = @staffId;

9. Update the timestamp to the current date/time for the new store you entered in the previous question. 
START TRANSACTION;

SET SQL_SAFE_UPDATES = 0;

UPDATE store AS s
INNER JOIN address AS a ON a.address_id = s.address_id
SET s.last_update = CURDATE()
WHERE a.address = 'wenlong';

SET SQL_SAFE_UPDATES = 1;

ROLLBACK;

10. Delete the new store. 

START TRANSACTION;

SET SQL_SAFE_UPDATES = 0;

DELETE s.*
FROM store As s
INNER JOIN address AS a 
ON a.address_id = s.address_id
WHERE a.address = 'wenlong';

SET SQL_SAFE_UPDATES = 1;

ROLLBACK;


https://dev.mysql.com/doc/sakila/en/sakila-introduction.html

